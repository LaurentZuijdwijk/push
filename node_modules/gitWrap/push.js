// Generated by CoffeeScript 1.3.3
var async, color, exec, execGit, execGitCommit, execTest, getRevision, options, processArgs, sys;

sys = require('sys');

exec = require('child_process').exec;

color = require('colors');

async = require('async');

options = {};

processArgs = function(cb) {
  var _this = this;
  process.argv.forEach(function(val, index, array) {
    if (val === '-m') {
      return options.m = array[index + 1];
    }
  });
  return cb(null);
};

execTest = function(cb) {
  return exec('testacular run', puts);
};

execGitCommit = function(cb) {
  var cmd, puts;
  puts = function(error, stdout, stderr) {
    if (error) {
      cb(error, null);
    }
    sys.puts(stdout);
    return cb(null, stdout);
  };
  if (options.m) {
    cmd = "git commit -m '" + options.m + "'";
    exec(cmd, puts);
    return console.log(String(cmd).green.bold.inverse);
  } else {
    return cb(null);
  }
};

execGit = function(cmd, cb) {
  var puts;
  puts = function(error, stdout, stderr) {
    if (error) {
      cb(error, null);
    }
    sys.puts(stdout);
    return cb(null, stdout);
  };
  console.log(cmd.green.bold.inverse);
  return exec(cmd, puts);
};

getRevision = function(cb) {
  var cmd;
  cmd = 'git rev-list HEAD --count';
  exec(cmd, function(error, stdout, stderr) {
    return console.log('revision: '.green.inverse.bold + ' r'.green.inverse.bold + stdout.green.inverse.bold);
  });
  return cb(null);
};

async.series([async.apply(processArgs), async.apply(execGit, "git pull"), async.apply(execGit, "git status"), async.apply(execGit, "git add ."), async.apply(execGitCommit), async.apply(execGit, "git status"), async.apply(getRevision)]);
